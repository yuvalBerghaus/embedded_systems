

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Nov 30 19:03:57 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    16                           	dabs	1,0x7E,2
    17     0000                     
    18                           ; Version 2.40
    19                           ; Generated 17/11/2021 GMT
    20                           ; 
    21                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution. Publication is not required when
    35                           ;        this file is used in an embedded application.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F877A Definitions
    51                           ; 
    52                           ; SFR Addresses
    53     0000                     	;# 
    54     0001                     	;# 
    55     0002                     	;# 
    56     0003                     	;# 
    57     0004                     	;# 
    58     0005                     	;# 
    59     0006                     	;# 
    60     0007                     	;# 
    61     0008                     	;# 
    62     0009                     	;# 
    63     000A                     	;# 
    64     000B                     	;# 
    65     000C                     	;# 
    66     000D                     	;# 
    67     000E                     	;# 
    68     000E                     	;# 
    69     000F                     	;# 
    70     0010                     	;# 
    71     0011                     	;# 
    72     0012                     	;# 
    73     0013                     	;# 
    74     0014                     	;# 
    75     0015                     	;# 
    76     0015                     	;# 
    77     0016                     	;# 
    78     0017                     	;# 
    79     0018                     	;# 
    80     0019                     	;# 
    81     001A                     	;# 
    82     001B                     	;# 
    83     001B                     	;# 
    84     001C                     	;# 
    85     001D                     	;# 
    86     001E                     	;# 
    87     001F                     	;# 
    88     0081                     	;# 
    89     0085                     	;# 
    90     0086                     	;# 
    91     0087                     	;# 
    92     0088                     	;# 
    93     0089                     	;# 
    94     008C                     	;# 
    95     008D                     	;# 
    96     008E                     	;# 
    97     0091                     	;# 
    98     0092                     	;# 
    99     0093                     	;# 
   100     0094                     	;# 
   101     0098                     	;# 
   102     0099                     	;# 
   103     009C                     	;# 
   104     009D                     	;# 
   105     009E                     	;# 
   106     009F                     	;# 
   107     010C                     	;# 
   108     010D                     	;# 
   109     010E                     	;# 
   110     010F                     	;# 
   111     018C                     	;# 
   112     018D                     	;# 
   113     0000                     	;# 
   114     0001                     	;# 
   115     0002                     	;# 
   116     0003                     	;# 
   117     0004                     	;# 
   118     0005                     	;# 
   119     0006                     	;# 
   120     0007                     	;# 
   121     0008                     	;# 
   122     0009                     	;# 
   123     000A                     	;# 
   124     000B                     	;# 
   125     000C                     	;# 
   126     000D                     	;# 
   127     000E                     	;# 
   128     000E                     	;# 
   129     000F                     	;# 
   130     0010                     	;# 
   131     0011                     	;# 
   132     0012                     	;# 
   133     0013                     	;# 
   134     0014                     	;# 
   135     0015                     	;# 
   136     0015                     	;# 
   137     0016                     	;# 
   138     0017                     	;# 
   139     0018                     	;# 
   140     0019                     	;# 
   141     001A                     	;# 
   142     001B                     	;# 
   143     001B                     	;# 
   144     001C                     	;# 
   145     001D                     	;# 
   146     001E                     	;# 
   147     001F                     	;# 
   148     0081                     	;# 
   149     0085                     	;# 
   150     0086                     	;# 
   151     0087                     	;# 
   152     0088                     	;# 
   153     0089                     	;# 
   154     008C                     	;# 
   155     008D                     	;# 
   156     008E                     	;# 
   157     0091                     	;# 
   158     0092                     	;# 
   159     0093                     	;# 
   160     0094                     	;# 
   161     0098                     	;# 
   162     0099                     	;# 
   163     009C                     	;# 
   164     009D                     	;# 
   165     009E                     	;# 
   166     009F                     	;# 
   167     010C                     	;# 
   168     010D                     	;# 
   169     010E                     	;# 
   170     010F                     	;# 
   171     018C                     	;# 
   172     018D                     	;# 
   173     001E                     _ADRESH	set	30
   174     001F                     _ADCON0bits	set	31
   175     001F                     _ADCON0	set	31
   176     0006                     _PORTBbits	set	6
   177     0008                     _PORTD	set	8
   178     0006                     _PORTB	set	6
   179     009E                     _ADRESL	set	158
   180     0088                     _TRISD	set	136
   181     0086                     _TRISB	set	134
   182     0085                     _TRISA	set	133
   183     009F                     _ADCON1bits	set	159
   184                           
   185                           	psect	cinit
   186     07FC                     start_initialization:	
   187                           ; #config settings
   188                           
   189     07FC                     __initialization:
   190     07FC                     end_of_initialization:	
   191                           ;End of C runtime variable initialization code
   192                           
   193     07FC                     __end_of__initialization:
   194     07FC  0183               	clrf	3
   195     07FD  120A  118A  2E1B   	ljmp	_main	;jump to C main() function
   196                           
   197                           	psect	cstackCOMMON
   198     0070                     __pcstackCOMMON:
   199     0070                     ?_delay_ms:
   200     0070                     ?_display7s:	
   201                           ; 1 bytes @ 0x0
   202                           
   203     0070                     ??_display7s:	
   204                           ; 1 bytes @ 0x0
   205                           
   206     0070                     ?_Init:	
   207                           ; 1 bytes @ 0x0
   208                           
   209     0070                     ??_Init:	
   210                           ; 1 bytes @ 0x0
   211                           
   212     0070                     ?_main:	
   213                           ; 1 bytes @ 0x0
   214                           
   215     0070                     ?___awdiv:	
   216                           ; 1 bytes @ 0x0
   217                           
   218     0070                     delay_ms@delayMs:	
   219                           ; 2 bytes @ 0x0
   220                           
   221     0070                     ___awdiv@divisor:	
   222                           ; 2 bytes @ 0x0
   223                           
   224                           
   225                           ; 2 bytes @ 0x0
   226     0070                     	ds	2
   227     0072                     ??_delay_ms:
   228     0072                     display7s@digit:	
   229                           ; 1 bytes @ 0x2
   230                           
   231     0072                     ___awdiv@dividend:	
   232                           ; 1 bytes @ 0x2
   233                           
   234                           
   235                           ; 2 bytes @ 0x2
   236     0072                     	ds	1
   237     0073                     delay_ms@i:
   238                           
   239                           ; 2 bytes @ 0x3
   240     0073                     	ds	1
   241     0074                     ??___awdiv:
   242                           
   243                           ; 1 bytes @ 0x4
   244     0074                     	ds	1
   245     0075                     delay_ms@j:
   246     0075                     ___awdiv@counter:	
   247                           ; 1 bytes @ 0x5
   248                           
   249                           
   250                           ; 1 bytes @ 0x5
   251     0075                     	ds	1
   252     0076                     ___awdiv@sign:
   253                           
   254                           ; 1 bytes @ 0x6
   255     0076                     	ds	1
   256     0077                     ___awdiv@quotient:
   257                           
   258                           ; 2 bytes @ 0x7
   259     0077                     	ds	2
   260     0079                     ?___awmod:
   261     0079                     ___awmod@divisor:	
   262                           ; 2 bytes @ 0x9
   263                           
   264                           
   265                           ; 2 bytes @ 0x9
   266     0079                     	ds	2
   267     007B                     ___awmod@dividend:
   268                           
   269                           ; 2 bytes @ 0xB
   270     007B                     	ds	2
   271     007D                     ??___awmod:
   272                           
   273                           ; 1 bytes @ 0xD
   274     007D                     	ds	1
   275     007E                     ??_displayNumber:
   276                           
   277                           	psect	cstackBANK0
   278     0020                     __pcstackBANK0:	
   279                           ; 1 bytes @ 0xE
   280                           
   281     0020                     ___awmod@counter:
   282                           
   283                           ; 1 bytes @ 0x0
   284     0020                     	ds	1
   285     0021                     ___awmod@sign:
   286                           
   287                           ; 1 bytes @ 0x1
   288     0021                     	ds	1
   289     0022                     ?_displayNumber:
   290     0022                     displayNumber@number:	
   291                           ; 1 bytes @ 0x2
   292                           
   293                           
   294                           ; 2 bytes @ 0x2
   295     0022                     	ds	2
   296     0024                     displayNumber@alafim:
   297                           
   298                           ; 2 bytes @ 0x4
   299     0024                     	ds	2
   300     0026                     displayNumber@meot:
   301                           
   302                           ; 2 bytes @ 0x6
   303     0026                     	ds	2
   304     0028                     displayNumber@asarot:
   305                           
   306                           ; 2 bytes @ 0x8
   307     0028                     	ds	2
   308     002A                     displayNumber@unit:
   309                           
   310                           ; 2 bytes @ 0xA
   311     002A                     	ds	2
   312     002C                     ??_main:
   313                           
   314                           ; 1 bytes @ 0xC
   315     002C                     	ds	2
   316     002E                     main@low_important:
   317                           
   318                           ; 2 bytes @ 0xE
   319     002E                     	ds	2
   320     0030                     main@masker:
   321                           
   322                           ; 2 bytes @ 0x10
   323     0030                     	ds	2
   324     0032                     main@adresl:
   325                           
   326                           ; 2 bytes @ 0x12
   327     0032                     	ds	2
   328     0034                     main@adresh:
   329                           
   330                           ; 2 bytes @ 0x14
   331     0034                     	ds	2
   332     0036                     main@res:
   333                           
   334                           ; 2 bytes @ 0x16
   335     0036                     	ds	2
   336                           
   337                           	psect	maintext
   338     061B                     __pmaintext:	
   339 ;;
   340 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   341 ;;
   342 ;; *************** function _main *****************
   343 ;; Defined at:
   344 ;;		line 104 in file "Lab2.c"
   345 ;; Parameters:    Size  Location     Type
   346 ;;		None
   347 ;; Auto vars:     Size  Location     Type
   348 ;;  adresh          2   20[BANK0 ] int 
   349 ;;  adresl          2   18[BANK0 ] int 
   350 ;;  masker          2   16[BANK0 ] int 
   351 ;;  low_importan    2   14[BANK0 ] int 
   352 ;;  high_importa    2    0        int 
   353 ;;  res             2   22[BANK0 ] int 
   354 ;; Return value:  Size  Location     Type
   355 ;;                  1    wreg      void 
   356 ;; Registers used:
   357 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   358 ;; Tracked objects:
   359 ;;		On entry : B00/0
   360 ;;		On exit  : 0/0
   361 ;;		Unchanged: 0/0
   362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   363 ;;      Params:         0       0       0       0       0
   364 ;;      Locals:         0      10       0       0       0
   365 ;;      Temps:          0       2       0       0       0
   366 ;;      Totals:         0      12       0       0       0
   367 ;;Total ram usage:       12 bytes
   368 ;; Hardware stack levels required when called: 2
   369 ;; This function calls:
   370 ;;		_Init
   371 ;;		_displayNumber
   372 ;; This function is called by:
   373 ;;		Startup code after reset
   374 ;; This function uses a non-reentrant model
   375 ;;
   376                           
   377     061B                     _main:	
   378                           ;psect for function _main
   379                           
   380     061B                     l1100:	
   381                           ;incstack = 0
   382                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   383                           
   384                           
   385                           ;Lab2.c: 105:     Init();
   386     061B  120A  118A  25A8  120A  118A  	fcall	_Init
   387     0620                     l1102:
   388     0620                     l1104:
   389                           
   390                           ;Lab2.c: 108:         ADCON0bits.GO = 1;
   391     0620  1283               	bcf	3,5	;RP0=0, select bank0
   392     0621  1303               	bcf	3,6	;RP1=0, select bank0
   393     0622  151F               	bsf	31,2	;volatile
   394     0623                     l58:	
   395                           ;Lab2.c: 109:         while(ADCON0bits.GO == 1);
   396                           
   397     0623  191F               	btfsc	31,2	;volatile
   398     0624  2E26               	goto	u441
   399     0625  2E27               	goto	u440
   400     0626                     u441:
   401     0626  2E23               	goto	l58
   402     0627                     u440:
   403     0627                     l1106:
   404                           
   405                           ;Lab2.c: 112:             int low_important = 0x000000FF;
   406     0627  30FF               	movlw	255
   407     0628  00AE               	movwf	main@low_important
   408     0629  3000               	movlw	0
   409     062A  00AF               	movwf	main@low_important+1
   410                           
   411                           ;Lab2.c: 113:             int masker = 0x000003FF;
   412     062B  30FF               	movlw	255
   413     062C  00B0               	movwf	main@masker
   414     062D  3003               	movlw	3
   415     062E  00B1               	movwf	main@masker+1
   416     062F                     l1108:
   417                           
   418                           ;Lab2.c: 114:             int adresh = ADRESH & high_important;
   419     062F  081E               	movf	30,w	;volatile
   420     0630  3903               	andlw	3
   421     0631  00AC               	movwf	??_main
   422     0632  01AD               	clrf	??_main+1
   423     0633  082C               	movf	??_main,w
   424     0634  00B4               	movwf	main@adresh
   425     0635  082D               	movf	??_main+1,w
   426     0636  00B5               	movwf	main@adresh+1
   427     0637                     l1110:
   428                           
   429                           ;Lab2.c: 115:             adresh = adresh << 8;
   430     0637  0835               	movf	main@adresh+1,w
   431     0638  00AD               	movwf	??_main+1
   432     0639  0834               	movf	main@adresh,w
   433     063A  00AC               	movwf	??_main
   434     063B  082C               	movf	??_main,w
   435     063C  00AD               	movwf	??_main+1
   436     063D  01AC               	clrf	??_main
   437     063E  082C               	movf	??_main,w
   438     063F  00B4               	movwf	main@adresh
   439     0640  082D               	movf	??_main+1,w
   440     0641  00B5               	movwf	main@adresh+1
   441     0642                     l1112:
   442                           
   443                           ;Lab2.c: 116:             int adresl = ADRESL & low_important;
   444     0642  1683               	bsf	3,5	;RP0=1, select bank1
   445     0643  1303               	bcf	3,6	;RP1=0, select bank1
   446     0644  081E               	movf	30,w	;volatile
   447     0645  1283               	bcf	3,5	;RP0=0, select bank0
   448     0646  1303               	bcf	3,6	;RP1=0, select bank0
   449     0647  00AC               	movwf	??_main
   450     0648  01AD               	clrf	??_main+1
   451     0649  082C               	movf	??_main,w
   452     064A  00B2               	movwf	main@adresl
   453     064B  082D               	movf	??_main+1,w
   454     064C  00B3               	movwf	main@adresl+1
   455     064D                     l1114:
   456                           
   457                           ;Lab2.c: 117:             res = adresh + adresl;
   458     064D  0832               	movf	main@adresl,w
   459     064E  0734               	addwf	main@adresh,w
   460     064F  00B6               	movwf	main@res
   461     0650  0833               	movf	main@adresl+1,w
   462     0651  1803               	skipnc
   463     0652  0A33               	incf	main@adresl+1,w
   464     0653  0735               	addwf	main@adresh+1,w
   465     0654  00B7               	movwf	main@res+1
   466     0655                     l1116:
   467                           
   468                           ;Lab2.c: 118:             res = res & masker;
   469     0655  30FF               	movlw	255
   470     0656  0536               	andwf	main@res,w
   471     0657  00B6               	movwf	main@res
   472     0658  3003               	movlw	3
   473     0659  0537               	andwf	main@res+1,w
   474     065A  00B7               	movwf	main@res+1
   475     065B                     l1118:
   476                           
   477                           ;Lab2.c: 119:             displayNumber(res);
   478     065B  0837               	movf	main@res+1,w
   479     065C  00A3               	movwf	displayNumber@number+1
   480     065D  0836               	movf	main@res,w
   481     065E  00A2               	movwf	displayNumber@number
   482     065F  120A  118A  272A  120A  118A  	fcall	_displayNumber
   483     0664  2E20               	goto	l1104
   484     0665  120A  118A  2800   	ljmp	start
   485     0668                     __end_of_main:
   486                           
   487                           	psect	text1
   488     072A                     __ptext1:	
   489 ;; *************** function _displayNumber *****************
   490 ;; Defined at:
   491 ;;		line 70 in file "Lab2.c"
   492 ;; Parameters:    Size  Location     Type
   493 ;;  number          2    2[BANK0 ] int 
   494 ;; Auto vars:     Size  Location     Type
   495 ;;  unit            2   10[BANK0 ] int 
   496 ;;  asarot          2    8[BANK0 ] int 
   497 ;;  meot            2    6[BANK0 ] int 
   498 ;;  alafim          2    4[BANK0 ] int 
   499 ;; Return value:  Size  Location     Type
   500 ;;                  1    wreg      void 
   501 ;; Registers used:
   502 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   503 ;; Tracked objects:
   504 ;;		On entry : 0/0
   505 ;;		On exit  : 0/0
   506 ;;		Unchanged: 0/0
   507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   508 ;;      Params:         0       2       0       0       0
   509 ;;      Locals:         0       8       0       0       0
   510 ;;      Temps:          0       0       0       0       0
   511 ;;      Totals:         0      10       0       0       0
   512 ;;Total ram usage:       10 bytes
   513 ;; Hardware stack levels used: 1
   514 ;; Hardware stack levels required when called: 1
   515 ;; This function calls:
   516 ;;		___awdiv
   517 ;;		___awmod
   518 ;;		_delay_ms
   519 ;;		_display7s
   520 ;; This function is called by:
   521 ;;		_main
   522 ;; This function uses a non-reentrant model
   523 ;;
   524                           
   525     072A                     _displayNumber:	
   526                           ;psect for function _displayNumber
   527                           
   528     072A                     l1048:	
   529                           ;incstack = 0
   530                           ; Regs used in _displayNumber: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   531                           
   532     072A  1283               	bcf	3,5	;RP0=0, select bank0
   533     072B  1303               	bcf	3,6	;RP1=0, select bank0
   534     072C  01A6               	clrf	displayNumber@meot
   535     072D  01A7               	clrf	displayNumber@meot+1
   536     072E  01A8               	clrf	displayNumber@asarot
   537     072F  01A9               	clrf	displayNumber@asarot+1
   538     0730  01AA               	clrf	displayNumber@unit
   539     0731  01AB               	clrf	displayNumber@unit+1
   540     0732                     l1050:
   541                           
   542                           ;Lab2.c: 72:     unit = number%10;
   543     0732  300A               	movlw	10
   544     0733  00F9               	movwf	___awmod@divisor
   545     0734  3000               	movlw	0
   546     0735  00FA               	movwf	___awmod@divisor+1
   547     0736  0823               	movf	displayNumber@number+1,w
   548     0737  00FC               	movwf	___awmod@dividend+1
   549     0738  0822               	movf	displayNumber@number,w
   550     0739  00FB               	movwf	___awmod@dividend
   551     073A  120A  118A  2668  120A  118A  	fcall	___awmod
   552     073F  087A               	movf	?___awmod+1,w
   553     0740  1283               	bcf	3,5	;RP0=0, select bank0
   554     0741  1303               	bcf	3,6	;RP1=0, select bank0
   555     0742  00AB               	movwf	displayNumber@unit+1
   556     0743  0879               	movf	?___awmod,w
   557     0744  00AA               	movwf	displayNumber@unit
   558     0745                     l1052:
   559                           
   560                           ;Lab2.c: 73:     PORTB = 0x00;
   561     0745  0186               	clrf	6	;volatile
   562     0746                     l1054:
   563                           
   564                           ;Lab2.c: 74:     PORTD = display7s(unit);
   565     0746  082A               	movf	displayNumber@unit,w
   566     0747  120A  118A  25DA  120A  118A  	fcall	_display7s
   567     074C  1283               	bcf	3,5	;RP0=0, select bank0
   568     074D  1303               	bcf	3,6	;RP1=0, select bank0
   569     074E  0088               	movwf	8	;volatile
   570     074F                     l1056:
   571                           
   572                           ;Lab2.c: 75:     PORTBbits.RB4 = 1;
   573     074F  1606               	bsf	6,4	;volatile
   574     0750                     l1058:
   575                           
   576                           ;Lab2.c: 76:     delay_ms(3);
   577     0750  3003               	movlw	3
   578     0751  00F0               	movwf	delay_ms@delayMs
   579     0752  3000               	movlw	0
   580     0753  00F1               	movwf	delay_ms@delayMs+1
   581     0754  120A  118A  25B9  120A  118A  	fcall	_delay_ms
   582     0759                     l1060:
   583                           
   584                           ;Lab2.c: 77:     asarot = (number/10)%10;
   585     0759  300A               	movlw	10
   586     075A  00F9               	movwf	___awmod@divisor
   587     075B  3000               	movlw	0
   588     075C  00FA               	movwf	___awmod@divisor+1
   589     075D  300A               	movlw	10
   590     075E  00F0               	movwf	___awdiv@divisor
   591     075F  3000               	movlw	0
   592     0760  00F1               	movwf	___awdiv@divisor+1
   593     0761  1283               	bcf	3,5	;RP0=0, select bank0
   594     0762  1303               	bcf	3,6	;RP1=0, select bank0
   595     0763  0823               	movf	displayNumber@number+1,w
   596     0764  00F3               	movwf	___awdiv@dividend+1
   597     0765  0822               	movf	displayNumber@number,w
   598     0766  00F2               	movwf	___awdiv@dividend
   599     0767  120A  118A  26C3  120A  118A  	fcall	___awdiv
   600     076C  0871               	movf	?___awdiv+1,w
   601     076D  00FC               	movwf	___awmod@dividend+1
   602     076E  0870               	movf	?___awdiv,w
   603     076F  00FB               	movwf	___awmod@dividend
   604     0770  120A  118A  2668  120A  118A  	fcall	___awmod
   605     0775  087A               	movf	?___awmod+1,w
   606     0776  1283               	bcf	3,5	;RP0=0, select bank0
   607     0777  1303               	bcf	3,6	;RP1=0, select bank0
   608     0778  00A9               	movwf	displayNumber@asarot+1
   609     0779  0879               	movf	?___awmod,w
   610     077A  00A8               	movwf	displayNumber@asarot
   611     077B                     l1062:
   612                           
   613                           ;Lab2.c: 78:     PORTB = 0x00;
   614     077B  0186               	clrf	6	;volatile
   615     077C                     l1064:
   616                           
   617                           ;Lab2.c: 79:     PORTD = display7s(asarot);
   618     077C  0828               	movf	displayNumber@asarot,w
   619     077D  120A  118A  25DA  120A  118A  	fcall	_display7s
   620     0782  1283               	bcf	3,5	;RP0=0, select bank0
   621     0783  1303               	bcf	3,6	;RP1=0, select bank0
   622     0784  0088               	movwf	8	;volatile
   623     0785                     l1066:
   624                           
   625                           ;Lab2.c: 80:     PORTBbits.RB5 = 1;
   626     0785  1686               	bsf	6,5	;volatile
   627     0786                     l1068:
   628                           
   629                           ;Lab2.c: 81:     delay_ms(3);
   630     0786  3003               	movlw	3
   631     0787  00F0               	movwf	delay_ms@delayMs
   632     0788  3000               	movlw	0
   633     0789  00F1               	movwf	delay_ms@delayMs+1
   634     078A  120A  118A  25B9  120A  118A  	fcall	_delay_ms
   635     078F                     l1070:
   636                           
   637                           ;Lab2.c: 82:     meot = (number/100)%10;
   638     078F  300A               	movlw	10
   639     0790  00F9               	movwf	___awmod@divisor
   640     0791  3000               	movlw	0
   641     0792  00FA               	movwf	___awmod@divisor+1
   642     0793  3064               	movlw	100
   643     0794  00F0               	movwf	___awdiv@divisor
   644     0795  3000               	movlw	0
   645     0796  00F1               	movwf	___awdiv@divisor+1
   646     0797  1283               	bcf	3,5	;RP0=0, select bank0
   647     0798  1303               	bcf	3,6	;RP1=0, select bank0
   648     0799  0823               	movf	displayNumber@number+1,w
   649     079A  00F3               	movwf	___awdiv@dividend+1
   650     079B  0822               	movf	displayNumber@number,w
   651     079C  00F2               	movwf	___awdiv@dividend
   652     079D  120A  118A  26C3  120A  118A  	fcall	___awdiv
   653     07A2  0871               	movf	?___awdiv+1,w
   654     07A3  00FC               	movwf	___awmod@dividend+1
   655     07A4  0870               	movf	?___awdiv,w
   656     07A5  00FB               	movwf	___awmod@dividend
   657     07A6  120A  118A  2668  120A  118A  	fcall	___awmod
   658     07AB  087A               	movf	?___awmod+1,w
   659     07AC  1283               	bcf	3,5	;RP0=0, select bank0
   660     07AD  1303               	bcf	3,6	;RP1=0, select bank0
   661     07AE  00A7               	movwf	displayNumber@meot+1
   662     07AF  0879               	movf	?___awmod,w
   663     07B0  00A6               	movwf	displayNumber@meot
   664     07B1                     l1072:
   665                           
   666                           ;Lab2.c: 83:     PORTB = 0x00;
   667     07B1  0186               	clrf	6	;volatile
   668     07B2                     l1074:
   669                           
   670                           ;Lab2.c: 84:     PORTD = display7s(meot);
   671     07B2  0826               	movf	displayNumber@meot,w
   672     07B3  120A  118A  25DA  120A  118A  	fcall	_display7s
   673     07B8  1283               	bcf	3,5	;RP0=0, select bank0
   674     07B9  1303               	bcf	3,6	;RP1=0, select bank0
   675     07BA  0088               	movwf	8	;volatile
   676     07BB                     l1076:
   677                           
   678                           ;Lab2.c: 85:     PORTBbits.RB6 = 1;
   679     07BB  1706               	bsf	6,6	;volatile
   680     07BC                     l1078:
   681                           
   682                           ;Lab2.c: 86:     delay_ms(3);
   683     07BC  3003               	movlw	3
   684     07BD  00F0               	movwf	delay_ms@delayMs
   685     07BE  3000               	movlw	0
   686     07BF  00F1               	movwf	delay_ms@delayMs+1
   687     07C0  120A  118A  25B9  120A  118A  	fcall	_delay_ms
   688     07C5                     l1080:
   689                           
   690                           ;Lab2.c: 87:     alafim = (number/1000)%10;
   691     07C5  300A               	movlw	10
   692     07C6  00F9               	movwf	___awmod@divisor
   693     07C7  3000               	movlw	0
   694     07C8  00FA               	movwf	___awmod@divisor+1
   695     07C9  30E8               	movlw	232
   696     07CA  00F0               	movwf	___awdiv@divisor
   697     07CB  3003               	movlw	3
   698     07CC  00F1               	movwf	___awdiv@divisor+1
   699     07CD  1283               	bcf	3,5	;RP0=0, select bank0
   700     07CE  1303               	bcf	3,6	;RP1=0, select bank0
   701     07CF  0823               	movf	displayNumber@number+1,w
   702     07D0  00F3               	movwf	___awdiv@dividend+1
   703     07D1  0822               	movf	displayNumber@number,w
   704     07D2  00F2               	movwf	___awdiv@dividend
   705     07D3  120A  118A  26C3  120A  118A  	fcall	___awdiv
   706     07D8  0871               	movf	?___awdiv+1,w
   707     07D9  00FC               	movwf	___awmod@dividend+1
   708     07DA  0870               	movf	?___awdiv,w
   709     07DB  00FB               	movwf	___awmod@dividend
   710     07DC  120A  118A  2668  120A  118A  	fcall	___awmod
   711     07E1  087A               	movf	?___awmod+1,w
   712     07E2  1283               	bcf	3,5	;RP0=0, select bank0
   713     07E3  1303               	bcf	3,6	;RP1=0, select bank0
   714     07E4  00A5               	movwf	displayNumber@alafim+1
   715     07E5  0879               	movf	?___awmod,w
   716     07E6  00A4               	movwf	displayNumber@alafim
   717     07E7                     l1082:
   718                           
   719                           ;Lab2.c: 88:     PORTB = 0x00;
   720     07E7  0186               	clrf	6	;volatile
   721     07E8                     l1084:
   722                           
   723                           ;Lab2.c: 89:     PORTD = display7s(alafim);
   724     07E8  0824               	movf	displayNumber@alafim,w
   725     07E9  120A  118A  25DA  120A  118A  	fcall	_display7s
   726     07EE  1283               	bcf	3,5	;RP0=0, select bank0
   727     07EF  1303               	bcf	3,6	;RP1=0, select bank0
   728     07F0  0088               	movwf	8	;volatile
   729     07F1                     l1086:
   730                           
   731                           ;Lab2.c: 90:     PORTBbits.RB7 = 1;
   732     07F1  1786               	bsf	6,7	;volatile
   733     07F2                     l1088:
   734                           
   735                           ;Lab2.c: 91:     delay_ms(3);
   736     07F2  3003               	movlw	3
   737     07F3  00F0               	movwf	delay_ms@delayMs
   738     07F4  3000               	movlw	0
   739     07F5  00F1               	movwf	delay_ms@delayMs+1
   740     07F6  120A  118A  25B9  120A  118A  	fcall	_delay_ms
   741     07FB                     l49:
   742     07FB  0008               	return
   743     07FC                     __end_of_displayNumber:
   744                           
   745                           	psect	text2
   746     05DA                     __ptext2:	
   747 ;; *************** function _display7s *****************
   748 ;; Defined at:
   749 ;;		line 40 in file "Lab2.c"
   750 ;; Parameters:    Size  Location     Type
   751 ;;  digit           1    wreg     unsigned char 
   752 ;; Auto vars:     Size  Location     Type
   753 ;;  digit           1    2[COMMON] unsigned char 
   754 ;; Return value:  Size  Location     Type
   755 ;;                  1    wreg      unsigned char 
   756 ;; Registers used:
   757 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   758 ;; Tracked objects:
   759 ;;		On entry : 0/0
   760 ;;		On exit  : 0/0
   761 ;;		Unchanged: 0/0
   762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   763 ;;      Params:         0       0       0       0       0
   764 ;;      Locals:         1       0       0       0       0
   765 ;;      Temps:          2       0       0       0       0
   766 ;;      Totals:         3       0       0       0       0
   767 ;;Total ram usage:        3 bytes
   768 ;; Hardware stack levels used: 1
   769 ;; This function calls:
   770 ;;		Nothing
   771 ;; This function is called by:
   772 ;;		_displayNumber
   773 ;; This function uses a non-reentrant model
   774 ;;
   775                           
   776     05DA                     _display7s:	
   777                           ;psect for function _display7s
   778                           
   779                           
   780                           ;incstack = 0
   781                           ; Regs used in _display7s: [wreg-fsr0h+status,2+status,0]
   782                           ;display7s@digit stored from wreg
   783     05DA  00F2               	movwf	display7s@digit
   784     05DB                     l912:
   785                           
   786                           ;Lab2.c: 40: unsigned char display7s(unsigned char digit);Lab2.c: 41: {;Lab2.c: 42:   sw
      +                          itch(digit)
   787     05DB  2DF2               	goto	l960
   788     05DC                     l914:
   789                           
   790                           ;Lab2.c: 45:       return 0x3F;
   791     05DC  303F               	movlw	63
   792     05DD  2E1A               	goto	l35
   793     05DE                     l918:
   794                           
   795                           ;Lab2.c: 47:       return 0x06;
   796     05DE  3006               	movlw	6
   797     05DF  2E1A               	goto	l35
   798     05E0                     l922:
   799                           
   800                           ;Lab2.c: 49:       return 0x5B;
   801     05E0  305B               	movlw	91
   802     05E1  2E1A               	goto	l35
   803     05E2                     l926:
   804                           
   805                           ;Lab2.c: 51:       return 0x4F;
   806     05E2  304F               	movlw	79
   807     05E3  2E1A               	goto	l35
   808     05E4                     l930:
   809                           
   810                           ;Lab2.c: 53:       return 0x66;
   811     05E4  3066               	movlw	102
   812     05E5  2E1A               	goto	l35
   813     05E6                     l934:
   814                           
   815                           ;Lab2.c: 55:       return 0x6D;
   816     05E6  306D               	movlw	109
   817     05E7  2E1A               	goto	l35
   818     05E8                     l938:
   819                           
   820                           ;Lab2.c: 57:       return 0x7D;
   821     05E8  307D               	movlw	125
   822     05E9  2E1A               	goto	l35
   823     05EA                     l942:
   824                           
   825                           ;Lab2.c: 59:       return 0x07;
   826     05EA  3007               	movlw	7
   827     05EB  2E1A               	goto	l35
   828     05EC                     l946:
   829                           
   830                           ;Lab2.c: 61:       return 0x7F;
   831     05EC  307F               	movlw	127
   832     05ED  2E1A               	goto	l35
   833     05EE                     l950:
   834                           
   835                           ;Lab2.c: 63:       return 0x6F;
   836     05EE  306F               	movlw	111
   837     05EF  2E1A               	goto	l35
   838     05F0                     l954:
   839                           
   840                           ;Lab2.c: 65:       return 0;
   841     05F0  3000               	movlw	0
   842     05F1  2E1A               	goto	l35
   843     05F2                     l960:
   844     05F2  0872               	movf	display7s@digit,w
   845     05F3  00F0               	movwf	??_display7s
   846     05F4  01F1               	clrf	??_display7s+1
   847                           
   848                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   849                           ; Switch size 1, requested type "simple"
   850                           ; Number of cases is 1, Range of values is 0 to 0
   851                           ; switch strategies available:
   852                           ; Name         Instructions Cycles
   853                           ; simple_byte            4     3 (average)
   854                           ; direct_byte           11     8 (fixed)
   855                           ; jumptable            260     6 (fixed)
   856                           ;	Chosen strategy is simple_byte
   857     05F5  0871               	movf	??_display7s+1,w
   858     05F6  3A00               	xorlw	0	; case 0
   859     05F7  1903               	skipnz
   860     05F8  2DFA               	goto	l1140
   861     05F9  2DF0               	goto	l954
   862     05FA                     l1140:
   863                           
   864                           ; Switch size 1, requested type "simple"
   865                           ; Number of cases is 10, Range of values is 0 to 9
   866                           ; switch strategies available:
   867                           ; Name         Instructions Cycles
   868                           ; simple_byte           31    16 (average)
   869                           ; direct_byte           38     8 (fixed)
   870                           ; jumptable            260     6 (fixed)
   871                           ;	Chosen strategy is simple_byte
   872     05FA  0870               	movf	??_display7s,w
   873     05FB  3A00               	xorlw	0	; case 0
   874     05FC  1903               	skipnz
   875     05FD  2DDC               	goto	l914
   876     05FE  3A01               	xorlw	1	; case 1
   877     05FF  1903               	skipnz
   878     0600  2DDE               	goto	l918
   879     0601  3A03               	xorlw	3	; case 2
   880     0602  1903               	skipnz
   881     0603  2DE0               	goto	l922
   882     0604  3A01               	xorlw	1	; case 3
   883     0605  1903               	skipnz
   884     0606  2DE2               	goto	l926
   885     0607  3A07               	xorlw	7	; case 4
   886     0608  1903               	skipnz
   887     0609  2DE4               	goto	l930
   888     060A  3A01               	xorlw	1	; case 5
   889     060B  1903               	skipnz
   890     060C  2DE6               	goto	l934
   891     060D  3A03               	xorlw	3	; case 6
   892     060E  1903               	skipnz
   893     060F  2DE8               	goto	l938
   894     0610  3A01               	xorlw	1	; case 7
   895     0611  1903               	skipnz
   896     0612  2DEA               	goto	l942
   897     0613  3A0F               	xorlw	15	; case 8
   898     0614  1903               	skipnz
   899     0615  2DEC               	goto	l946
   900     0616  3A01               	xorlw	1	; case 9
   901     0617  1903               	skipnz
   902     0618  2DEE               	goto	l950
   903     0619  2DF0               	goto	l954
   904     061A                     l35:
   905     061A  0008               	return
   906     061B                     __end_of_display7s:
   907                           
   908                           	psect	text3
   909     05B9                     __ptext3:	
   910 ;; *************** function _delay_ms *****************
   911 ;; Defined at:
   912 ;;		line 22 in file "Lab2.c"
   913 ;; Parameters:    Size  Location     Type
   914 ;;  delayMs         2    0[COMMON] unsigned int 
   915 ;; Auto vars:     Size  Location     Type
   916 ;;  i               2    3[COMMON] unsigned int 
   917 ;;  j               1    5[COMMON] unsigned char 
   918 ;; Return value:  Size  Location     Type
   919 ;;                  1    wreg      void 
   920 ;; Registers used:
   921 ;;		wreg, status,2, status,0
   922 ;; Tracked objects:
   923 ;;		On entry : 0/0
   924 ;;		On exit  : 0/0
   925 ;;		Unchanged: 0/0
   926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   927 ;;      Params:         2       0       0       0       0
   928 ;;      Locals:         3       0       0       0       0
   929 ;;      Temps:          1       0       0       0       0
   930 ;;      Totals:         6       0       0       0       0
   931 ;;Total ram usage:        6 bytes
   932 ;; Hardware stack levels used: 1
   933 ;; This function calls:
   934 ;;		Nothing
   935 ;; This function is called by:
   936 ;;		_displayNumber
   937 ;; This function uses a non-reentrant model
   938 ;;
   939                           
   940     05B9                     _delay_ms:	
   941                           ;psect for function _delay_ms
   942                           
   943     05B9                     l898:	
   944                           ;incstack = 0
   945                           ; Regs used in _delay_ms: [wreg+status,2+status,0]
   946                           
   947                           
   948                           ;Lab2.c: 22: void delay_ms(unsigned int delayMs);Lab2.c: 23: {;Lab2.c: 24: unsigned int 
      +                          i;;Lab2.c: 25: unsigned char j;;Lab2.c: 27:  for (i =0; i< delayMs; i++)
   949     05B9  01F3               	clrf	delay_ms@i
   950     05BA  01F4               	clrf	delay_ms@i+1
   951     05BB  2DCF               	goto	l25
   952     05BC                     l900:
   953                           
   954                           ;Lab2.c: 28:  {;Lab2.c: 29:   for (j =0 ; j < 200; j++)
   955     05BC  01F5               	clrf	delay_ms@j
   956     05BD                     l27:
   957     05BD  0000               	nop	;# 
   958     05BE  0000               	nop	;# 
   959     05BF                     l906:
   960                           
   961                           ;Lab2.c: 33:     }
   962     05BF  3001               	movlw	1
   963     05C0  00F2               	movwf	??_delay_ms
   964     05C1  0872               	movf	??_delay_ms,w
   965     05C2  07F5               	addwf	delay_ms@j,f
   966     05C3                     l908:
   967     05C3  30C8               	movlw	200
   968     05C4  0275               	subwf	delay_ms@j,w
   969     05C5  1C03               	skipc
   970     05C6  2DC8               	goto	u231
   971     05C7  2DC9               	goto	u230
   972     05C8                     u231:
   973     05C8  2DBD               	goto	l27
   974     05C9                     u230:
   975     05C9                     l910:
   976                           
   977                           ;Lab2.c: 34:  }
   978     05C9  3001               	movlw	1
   979     05CA  07F3               	addwf	delay_ms@i,f
   980     05CB  1803               	skipnc
   981     05CC  0AF4               	incf	delay_ms@i+1,f
   982     05CD  3000               	movlw	0
   983     05CE  07F4               	addwf	delay_ms@i+1,f
   984     05CF                     l25:
   985     05CF  0871               	movf	delay_ms@delayMs+1,w
   986     05D0  0274               	subwf	delay_ms@i+1,w
   987     05D1  1D03               	skipz
   988     05D2  2DD5               	goto	u245
   989     05D3  0870               	movf	delay_ms@delayMs,w
   990     05D4  0273               	subwf	delay_ms@i,w
   991     05D5                     u245:
   992     05D5  1C03               	skipc
   993     05D6  2DD8               	goto	u241
   994     05D7  2DD9               	goto	u240
   995     05D8                     u241:
   996     05D8  2DBC               	goto	l900
   997     05D9                     u240:
   998     05D9                     l30:
   999     05D9  0008               	return
  1000     05DA                     __end_of_delay_ms:
  1001                           
  1002                           	psect	text4
  1003     0668                     __ptext4:	
  1004 ;; *************** function ___awmod *****************
  1005 ;; Defined at:
  1006 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
  1007 ;; Parameters:    Size  Location     Type
  1008 ;;  divisor         2    9[COMMON] int 
  1009 ;;  dividend        2   11[COMMON] int 
  1010 ;; Auto vars:     Size  Location     Type
  1011 ;;  sign            1    1[BANK0 ] unsigned char 
  1012 ;;  counter         1    0[BANK0 ] unsigned char 
  1013 ;; Return value:  Size  Location     Type
  1014 ;;                  2    9[COMMON] int 
  1015 ;; Registers used:
  1016 ;;		wreg, status,2, status,0
  1017 ;; Tracked objects:
  1018 ;;		On entry : 0/0
  1019 ;;		On exit  : 0/0
  1020 ;;		Unchanged: 0/0
  1021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1022 ;;      Params:         4       0       0       0       0
  1023 ;;      Locals:         0       2       0       0       0
  1024 ;;      Temps:          1       0       0       0       0
  1025 ;;      Totals:         5       2       0       0       0
  1026 ;;Total ram usage:        7 bytes
  1027 ;; Hardware stack levels used: 1
  1028 ;; This function calls:
  1029 ;;		Nothing
  1030 ;; This function is called by:
  1031 ;;		_displayNumber
  1032 ;; This function uses a non-reentrant model
  1033 ;;
  1034                           
  1035     0668                     ___awmod:	
  1036                           ;psect for function ___awmod
  1037                           
  1038     0668                     l1010:	
  1039                           ;incstack = 0
  1040                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1041                           
  1042     0668  1283               	bcf	3,5	;RP0=0, select bank0
  1043     0669  1303               	bcf	3,6	;RP1=0, select bank0
  1044     066A  01A1               	clrf	___awmod@sign
  1045     066B                     l1012:
  1046     066B  1FFC               	btfss	___awmod@dividend+1,7
  1047     066C  2E6E               	goto	u351
  1048     066D  2E6F               	goto	u350
  1049     066E                     u351:
  1050     066E  2E76               	goto	l1018
  1051     066F                     u350:
  1052     066F                     l1014:
  1053     066F  09FB               	comf	___awmod@dividend,f
  1054     0670  09FC               	comf	___awmod@dividend+1,f
  1055     0671  0AFB               	incf	___awmod@dividend,f
  1056     0672  1903               	skipnz
  1057     0673  0AFC               	incf	___awmod@dividend+1,f
  1058     0674                     l1016:
  1059     0674  01A1               	clrf	___awmod@sign
  1060     0675  0AA1               	incf	___awmod@sign,f
  1061     0676                     l1018:
  1062     0676  1FFA               	btfss	___awmod@divisor+1,7
  1063     0677  2E79               	goto	u361
  1064     0678  2E7A               	goto	u360
  1065     0679                     u361:
  1066     0679  2E7F               	goto	l1022
  1067     067A                     u360:
  1068     067A                     l1020:
  1069     067A  09F9               	comf	___awmod@divisor,f
  1070     067B  09FA               	comf	___awmod@divisor+1,f
  1071     067C  0AF9               	incf	___awmod@divisor,f
  1072     067D  1903               	skipnz
  1073     067E  0AFA               	incf	___awmod@divisor+1,f
  1074     067F                     l1022:
  1075     067F  0879               	movf	___awmod@divisor,w
  1076     0680  047A               	iorwf	___awmod@divisor+1,w
  1077     0681  1903               	btfsc	3,2
  1078     0682  2E84               	goto	u371
  1079     0683  2E85               	goto	u370
  1080     0684                     u371:
  1081     0684  2EB4               	goto	l1040
  1082     0685                     u370:
  1083     0685                     l1024:
  1084     0685  01A0               	clrf	___awmod@counter
  1085     0686  0AA0               	incf	___awmod@counter,f
  1086     0687  2E93               	goto	l1030
  1087     0688                     l1026:
  1088     0688  3001               	movlw	1
  1089     0689                     u385:
  1090     0689  1003               	clrc
  1091     068A  0DF9               	rlf	___awmod@divisor,f
  1092     068B  0DFA               	rlf	___awmod@divisor+1,f
  1093     068C  3EFF               	addlw	-1
  1094     068D  1D03               	skipz
  1095     068E  2E89               	goto	u385
  1096     068F                     l1028:
  1097     068F  3001               	movlw	1
  1098     0690  00FD               	movwf	??___awmod
  1099     0691  087D               	movf	??___awmod,w
  1100     0692  07A0               	addwf	___awmod@counter,f
  1101     0693                     l1030:
  1102     0693  1FFA               	btfss	___awmod@divisor+1,7
  1103     0694  2E96               	goto	u391
  1104     0695  2E97               	goto	u390
  1105     0696                     u391:
  1106     0696  2E88               	goto	l1026
  1107     0697                     u390:
  1108     0697                     l1032:
  1109     0697  087A               	movf	___awmod@divisor+1,w
  1110     0698  027C               	subwf	___awmod@dividend+1,w
  1111     0699  1D03               	skipz
  1112     069A  2E9D               	goto	u405
  1113     069B  0879               	movf	___awmod@divisor,w
  1114     069C  027B               	subwf	___awmod@dividend,w
  1115     069D                     u405:
  1116     069D  1C03               	skipc
  1117     069E  2EA0               	goto	u401
  1118     069F  2EA1               	goto	u400
  1119     06A0                     u401:
  1120     06A0  2EA7               	goto	l1036
  1121     06A1                     u400:
  1122     06A1                     l1034:
  1123     06A1  0879               	movf	___awmod@divisor,w
  1124     06A2  02FB               	subwf	___awmod@dividend,f
  1125     06A3  087A               	movf	___awmod@divisor+1,w
  1126     06A4  1C03               	skipc
  1127     06A5  03FC               	decf	___awmod@dividend+1,f
  1128     06A6  02FC               	subwf	___awmod@dividend+1,f
  1129     06A7                     l1036:
  1130     06A7  3001               	movlw	1
  1131     06A8                     u415:
  1132     06A8  1003               	clrc
  1133     06A9  0CFA               	rrf	___awmod@divisor+1,f
  1134     06AA  0CF9               	rrf	___awmod@divisor,f
  1135     06AB  3EFF               	addlw	-1
  1136     06AC  1D03               	skipz
  1137     06AD  2EA8               	goto	u415
  1138     06AE                     l1038:
  1139     06AE  3001               	movlw	1
  1140     06AF  02A0               	subwf	___awmod@counter,f
  1141     06B0  1D03               	btfss	3,2
  1142     06B1  2EB3               	goto	u421
  1143     06B2  2EB4               	goto	u420
  1144     06B3                     u421:
  1145     06B3  2E97               	goto	l1032
  1146     06B4                     u420:
  1147     06B4                     l1040:
  1148     06B4  0821               	movf	___awmod@sign,w
  1149     06B5  1903               	btfsc	3,2
  1150     06B6  2EB8               	goto	u431
  1151     06B7  2EB9               	goto	u430
  1152     06B8                     u431:
  1153     06B8  2EBE               	goto	l1044
  1154     06B9                     u430:
  1155     06B9                     l1042:
  1156     06B9  09FB               	comf	___awmod@dividend,f
  1157     06BA  09FC               	comf	___awmod@dividend+1,f
  1158     06BB  0AFB               	incf	___awmod@dividend,f
  1159     06BC  1903               	skipnz
  1160     06BD  0AFC               	incf	___awmod@dividend+1,f
  1161     06BE                     l1044:
  1162     06BE  087C               	movf	___awmod@dividend+1,w
  1163     06BF  00FA               	movwf	?___awmod+1
  1164     06C0  087B               	movf	___awmod@dividend,w
  1165     06C1  00F9               	movwf	?___awmod
  1166     06C2                     l316:
  1167     06C2  0008               	return
  1168     06C3                     __end_of___awmod:
  1169                           
  1170                           	psect	text5
  1171     06C3                     __ptext5:	
  1172 ;; *************** function ___awdiv *****************
  1173 ;; Defined at:
  1174 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  1175 ;; Parameters:    Size  Location     Type
  1176 ;;  divisor         2    0[COMMON] int 
  1177 ;;  dividend        2    2[COMMON] int 
  1178 ;; Auto vars:     Size  Location     Type
  1179 ;;  quotient        2    7[COMMON] int 
  1180 ;;  sign            1    6[COMMON] unsigned char 
  1181 ;;  counter         1    5[COMMON] unsigned char 
  1182 ;; Return value:  Size  Location     Type
  1183 ;;                  2    0[COMMON] int 
  1184 ;; Registers used:
  1185 ;;		wreg, status,2, status,0
  1186 ;; Tracked objects:
  1187 ;;		On entry : 0/0
  1188 ;;		On exit  : 0/0
  1189 ;;		Unchanged: 0/0
  1190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1191 ;;      Params:         4       0       0       0       0
  1192 ;;      Locals:         4       0       0       0       0
  1193 ;;      Temps:          1       0       0       0       0
  1194 ;;      Totals:         9       0       0       0       0
  1195 ;;Total ram usage:        9 bytes
  1196 ;; Hardware stack levels used: 1
  1197 ;; This function calls:
  1198 ;;		Nothing
  1199 ;; This function is called by:
  1200 ;;		_displayNumber
  1201 ;; This function uses a non-reentrant model
  1202 ;;
  1203                           
  1204     06C3                     ___awdiv:	
  1205                           ;psect for function ___awdiv
  1206                           
  1207     06C3                     l966:	
  1208                           ;incstack = 0
  1209                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1210                           
  1211     06C3  01F6               	clrf	___awdiv@sign
  1212     06C4                     l968:
  1213     06C4  1FF1               	btfss	___awdiv@divisor+1,7
  1214     06C5  2EC7               	goto	u251
  1215     06C6  2EC8               	goto	u250
  1216     06C7                     u251:
  1217     06C7  2ECF               	goto	l974
  1218     06C8                     u250:
  1219     06C8                     l970:
  1220     06C8  09F0               	comf	___awdiv@divisor,f
  1221     06C9  09F1               	comf	___awdiv@divisor+1,f
  1222     06CA  0AF0               	incf	___awdiv@divisor,f
  1223     06CB  1903               	skipnz
  1224     06CC  0AF1               	incf	___awdiv@divisor+1,f
  1225     06CD                     l972:
  1226     06CD  01F6               	clrf	___awdiv@sign
  1227     06CE  0AF6               	incf	___awdiv@sign,f
  1228     06CF                     l974:
  1229     06CF  1FF3               	btfss	___awdiv@dividend+1,7
  1230     06D0  2ED2               	goto	u261
  1231     06D1  2ED3               	goto	u260
  1232     06D2                     u261:
  1233     06D2  2EDC               	goto	l980
  1234     06D3                     u260:
  1235     06D3                     l976:
  1236     06D3  09F2               	comf	___awdiv@dividend,f
  1237     06D4  09F3               	comf	___awdiv@dividend+1,f
  1238     06D5  0AF2               	incf	___awdiv@dividend,f
  1239     06D6  1903               	skipnz
  1240     06D7  0AF3               	incf	___awdiv@dividend+1,f
  1241     06D8                     l978:
  1242     06D8  3001               	movlw	1
  1243     06D9  00F4               	movwf	??___awdiv
  1244     06DA  0874               	movf	??___awdiv,w
  1245     06DB  06F6               	xorwf	___awdiv@sign,f
  1246     06DC                     l980:
  1247     06DC  01F7               	clrf	___awdiv@quotient
  1248     06DD  01F8               	clrf	___awdiv@quotient+1
  1249     06DE                     l982:
  1250     06DE  0870               	movf	___awdiv@divisor,w
  1251     06DF  0471               	iorwf	___awdiv@divisor+1,w
  1252     06E0  1903               	btfsc	3,2
  1253     06E1  2EE3               	goto	u271
  1254     06E2  2EE4               	goto	u270
  1255     06E3                     u271:
  1256     06E3  2F1B               	goto	l1002
  1257     06E4                     u270:
  1258     06E4                     l984:
  1259     06E4  01F5               	clrf	___awdiv@counter
  1260     06E5  0AF5               	incf	___awdiv@counter,f
  1261     06E6  2EF2               	goto	l990
  1262     06E7                     l986:
  1263     06E7  3001               	movlw	1
  1264     06E8                     u285:
  1265     06E8  1003               	clrc
  1266     06E9  0DF0               	rlf	___awdiv@divisor,f
  1267     06EA  0DF1               	rlf	___awdiv@divisor+1,f
  1268     06EB  3EFF               	addlw	-1
  1269     06EC  1D03               	skipz
  1270     06ED  2EE8               	goto	u285
  1271     06EE                     l988:
  1272     06EE  3001               	movlw	1
  1273     06EF  00F4               	movwf	??___awdiv
  1274     06F0  0874               	movf	??___awdiv,w
  1275     06F1  07F5               	addwf	___awdiv@counter,f
  1276     06F2                     l990:
  1277     06F2  1FF1               	btfss	___awdiv@divisor+1,7
  1278     06F3  2EF5               	goto	u291
  1279     06F4  2EF6               	goto	u290
  1280     06F5                     u291:
  1281     06F5  2EE7               	goto	l986
  1282     06F6                     u290:
  1283     06F6                     l992:
  1284     06F6  3001               	movlw	1
  1285     06F7                     u305:
  1286     06F7  1003               	clrc
  1287     06F8  0DF7               	rlf	___awdiv@quotient,f
  1288     06F9  0DF8               	rlf	___awdiv@quotient+1,f
  1289     06FA  3EFF               	addlw	-1
  1290     06FB  1D03               	skipz
  1291     06FC  2EF7               	goto	u305
  1292     06FD  0871               	movf	___awdiv@divisor+1,w
  1293     06FE  0273               	subwf	___awdiv@dividend+1,w
  1294     06FF  1D03               	skipz
  1295     0700  2F03               	goto	u315
  1296     0701  0870               	movf	___awdiv@divisor,w
  1297     0702  0272               	subwf	___awdiv@dividend,w
  1298     0703                     u315:
  1299     0703  1C03               	skipc
  1300     0704  2F06               	goto	u311
  1301     0705  2F07               	goto	u310
  1302     0706                     u311:
  1303     0706  2F0E               	goto	l998
  1304     0707                     u310:
  1305     0707                     l994:
  1306     0707  0870               	movf	___awdiv@divisor,w
  1307     0708  02F2               	subwf	___awdiv@dividend,f
  1308     0709  0871               	movf	___awdiv@divisor+1,w
  1309     070A  1C03               	skipc
  1310     070B  03F3               	decf	___awdiv@dividend+1,f
  1311     070C  02F3               	subwf	___awdiv@dividend+1,f
  1312     070D                     l996:
  1313     070D  1477               	bsf	___awdiv@quotient,0
  1314     070E                     l998:
  1315     070E  3001               	movlw	1
  1316     070F                     u325:
  1317     070F  1003               	clrc
  1318     0710  0CF1               	rrf	___awdiv@divisor+1,f
  1319     0711  0CF0               	rrf	___awdiv@divisor,f
  1320     0712  3EFF               	addlw	-1
  1321     0713  1D03               	skipz
  1322     0714  2F0F               	goto	u325
  1323     0715                     l1000:
  1324     0715  3001               	movlw	1
  1325     0716  02F5               	subwf	___awdiv@counter,f
  1326     0717  1D03               	btfss	3,2
  1327     0718  2F1A               	goto	u331
  1328     0719  2F1B               	goto	u330
  1329     071A                     u331:
  1330     071A  2EF6               	goto	l992
  1331     071B                     u330:
  1332     071B                     l1002:
  1333     071B  0876               	movf	___awdiv@sign,w
  1334     071C  1903               	btfsc	3,2
  1335     071D  2F1F               	goto	u341
  1336     071E  2F20               	goto	u340
  1337     071F                     u341:
  1338     071F  2F25               	goto	l1006
  1339     0720                     u340:
  1340     0720                     l1004:
  1341     0720  09F7               	comf	___awdiv@quotient,f
  1342     0721  09F8               	comf	___awdiv@quotient+1,f
  1343     0722  0AF7               	incf	___awdiv@quotient,f
  1344     0723  1903               	skipnz
  1345     0724  0AF8               	incf	___awdiv@quotient+1,f
  1346     0725                     l1006:
  1347     0725  0878               	movf	___awdiv@quotient+1,w
  1348     0726  00F1               	movwf	?___awdiv+1
  1349     0727  0877               	movf	___awdiv@quotient,w
  1350     0728  00F0               	movwf	?___awdiv
  1351     0729                     l303:
  1352     0729  0008               	return
  1353     072A                     __end_of___awdiv:
  1354                           
  1355                           	psect	text6
  1356     05A8                     __ptext6:	
  1357 ;; *************** function _Init *****************
  1358 ;; Defined at:
  1359 ;;		line 95 in file "Lab2.c"
  1360 ;; Parameters:    Size  Location     Type
  1361 ;;		None
  1362 ;; Auto vars:     Size  Location     Type
  1363 ;;		None
  1364 ;; Return value:  Size  Location     Type
  1365 ;;                  1    wreg      void 
  1366 ;; Registers used:
  1367 ;;		wreg, status,2
  1368 ;; Tracked objects:
  1369 ;;		On entry : 0/0
  1370 ;;		On exit  : 0/0
  1371 ;;		Unchanged: 0/0
  1372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1373 ;;      Params:         0       0       0       0       0
  1374 ;;      Locals:         0       0       0       0       0
  1375 ;;      Temps:          0       0       0       0       0
  1376 ;;      Totals:         0       0       0       0       0
  1377 ;;Total ram usage:        0 bytes
  1378 ;; Hardware stack levels used: 1
  1379 ;; This function calls:
  1380 ;;		Nothing
  1381 ;; This function is called by:
  1382 ;;		_main
  1383 ;; This function uses a non-reentrant model
  1384 ;;
  1385                           
  1386     05A8                     _Init:	
  1387                           ;psect for function _Init
  1388                           
  1389     05A8                     l1090:	
  1390                           ;incstack = 0
  1391                           ; Regs used in _Init: [wreg+status,2]
  1392                           
  1393                           
  1394                           ;Lab2.c: 96:     ADCON0 = 13;
  1395     05A8  300D               	movlw	13
  1396     05A9  1283               	bcf	3,5	;RP0=0, select bank0
  1397     05AA  1303               	bcf	3,6	;RP1=0, select bank0
  1398     05AB  009F               	movwf	31	;volatile
  1399     05AC                     l1092:
  1400                           
  1401                           ;Lab2.c: 97:     ADCON1bits.ADFM = 1;
  1402     05AC  1683               	bsf	3,5	;RP0=1, select bank1
  1403     05AD  1303               	bcf	3,6	;RP1=0, select bank1
  1404     05AE  179F               	bsf	31,7	;volatile
  1405     05AF                     l1094:
  1406                           
  1407                           ;Lab2.c: 98:     ADCON0bits.ADON = 1;
  1408     05AF  1283               	bcf	3,5	;RP0=0, select bank0
  1409     05B0  1303               	bcf	3,6	;RP1=0, select bank0
  1410     05B1  141F               	bsf	31,0	;volatile
  1411                           
  1412                           ;Lab2.c: 99:     TRISA = 0xFF;
  1413     05B2  30FF               	movlw	255
  1414     05B3  1683               	bsf	3,5	;RP0=1, select bank1
  1415     05B4  1303               	bcf	3,6	;RP1=0, select bank1
  1416     05B5  0085               	movwf	5	;volatile
  1417     05B6                     l1096:
  1418                           
  1419                           ;Lab2.c: 100:     TRISB = 0x00;
  1420     05B6  0186               	clrf	6	;volatile
  1421     05B7                     l1098:
  1422                           
  1423                           ;Lab2.c: 101:     TRISD = 0x00;
  1424     05B7  0188               	clrf	8	;volatile
  1425     05B8                     l52:
  1426     05B8  0008               	return
  1427     05B9                     __end_of_Init:
  1428     007E                     btemp	set	126	;btemp
  1429     007E                     wtemp0	set	126
  1430                           
  1431                           	psect	idloc
  1432                           
  1433                           ;Config register IDLOC0 @ 0x2000
  1434                           ;	unspecified, using default values
  1435     2000                     	org	8192
  1436     2000  3FFF               	dw	16383
  1437                           
  1438                           ;Config register IDLOC1 @ 0x2001
  1439                           ;	unspecified, using default values
  1440     2001                     	org	8193
  1441     2001  3FFF               	dw	16383
  1442                           
  1443                           ;Config register IDLOC2 @ 0x2002
  1444                           ;	unspecified, using default values
  1445     2002                     	org	8194
  1446     2002  3FFF               	dw	16383
  1447                           
  1448                           ;Config register IDLOC3 @ 0x2003
  1449                           ;	unspecified, using default values
  1450     2003                     	org	8195
  1451     2003  3FFF               	dw	16383
  1452                           
  1453                           	psect	config
  1454                           
  1455                           ;Config register CONFIG @ 0x2007
  1456                           ;	Oscillator Selection bits
  1457                           ;	FOSC = HS, HS oscillator
  1458                           ;	Watchdog Timer Enable bit
  1459                           ;	WDTE = OFF, WDT disabled
  1460                           ;	Power-up Timer Enable bit
  1461                           ;	PWRTE = OFF, PWRT disabled
  1462                           ;	Brown-out Reset Enable bit
  1463                           ;	BOREN = OFF, BOR disabled
  1464                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1465                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1466                           ;	Data EEPROM Memory Code Protection bit
  1467                           ;	CPD = OFF, Data EEPROM code protection off
  1468                           ;	Flash Program Memory Write Enable bits
  1469                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1470                           ;	In-Circuit Debugger Mode bit
  1471                           ;	DEBUG = 0x1, unprogrammed default
  1472                           ;	Flash Program Memory Code Protection bit
  1473                           ;	CP = OFF, Code protection off
  1474     2007                     	org	8199
  1475     2007  3F3A               	dw	16186

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     24      24
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _displayNumber->___awmod
    ___awmod->___awdiv

Critical Paths under _main in BANK0

    _main->_displayNumber
    _displayNumber->___awmod

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                14    14      0    2523
                                             12 BANK0     12    12      0
                               _Init
                      _displayNumber
 ---------------------------------------------------------------------------------
 (1) _displayNumber                                       10     8      2    2338
                                              2 BANK0     10     8      2
                            ___awdiv
                            ___awmod
                           _delay_ms
                          _display7s
 ---------------------------------------------------------------------------------
 (2) _display7s                                            3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _delay_ms                                             6     4      2     396
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     904
                                              9 COMMON     5     1      4
                                              0 BANK0      2     2      0
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     756
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _Init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Init
   _displayNumber
     ___awdiv
     ___awmod
       ___awdiv (ARG)
     _delay_ms
     _display7s

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     18      18       5       30.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Nov 30 19:03:57 2022

                     l30 05D9                       l25 05CF                       l27 05BD  
                     l35 061A                       l52 05B8                       l49 07FB  
                     l58 0623             ___awdiv@sign 0076                      l303 0729  
                    l316 06C2                      l900 05BC                      l910 05C9  
                    l912 05DB                      l906 05BF                      l930 05E4  
                    l922 05E0                      l914 05DC                      l908 05C3  
                    l950 05EE                      l942 05EA                      l934 05E6  
                    l926 05E2                      l918 05DE                      l960 05F2  
                    l970 06C8                      l954 05F0                      l946 05EC  
                    l938 05E8                      l980 06DC                      l972 06CD  
                    l990 06F2                      l982 06DE                      l974 06CF  
                    l966 06C3                      l992 06F6                      l984 06E4  
                    l976 06D3                      l968 06C4                      l994 0707  
                    l986 06E7                      l978 06D8                      l898 05B9  
                    l996 070D                      l988 06EE                      l998 070E  
                    u310 0707                      u230 05C9                      u311 0706  
                    u231 05C8                      u400 06A1                      u240 05D9  
                    u305 06F7                      u401 06A0                      u241 05D8  
                    u330 071B                      u250 06C8                      u331 071A  
                    u315 0703                      u251 06C7                      u340 0720  
                    u260 06D3                      u420 06B4                      u341 071F  
                    u325 070F                      u261 06D2                      u421 06B3  
                    u405 069D                      u245 05D5                      u270 06E4  
                    u430 06B9                      u350 066F                      u271 06E3  
                    u431 06B8                      u415 06A8                      u351 066E  
                    u360 067A                      u440 0627                      u361 0679  
                    u441 0626                      u290 06F6                      u370 0685  
                    u291 06F5                      u371 0684                      u285 06E8  
                    u390 0697                      u391 0696                      u385 0689  
           ___awmod@sign 0021           ?_displayNumber 0022                     l1000 0715  
                   l1002 071B                     l1010 0668                     l1004 0720  
                   l1020 067A                     l1012 066B                     l1100 061B  
                   l1006 0725                     l1030 0693                     l1022 067F  
                   l1014 066F                     l1110 0637                     l1102 0620  
                   l1032 0697                     l1024 0685                     l1040 06B4  
                   l1016 0674                     l1112 0642                     l1104 0620  
                   l1042 06B9                     l1034 06A1                     l1026 0688  
                   l1018 0676                     l1050 0732                     l1114 064D  
                   l1106 0627                     l1044 06BE                     l1036 06A7  
                   l1028 068F                     l1140 05FA                     l1060 0759  
                   l1052 0745                     l1116 0655                     l1108 062F  
                   l1038 06AE                     l1070 078F                     l1062 077B  
                   l1054 0746                     l1118 065B                     l1080 07C5  
                   l1072 07B1                     l1064 077C                     l1056 074F  
                   l1048 072A                     l1090 05A8                     l1082 07E7  
                   l1074 07B2                     l1066 0785                     l1058 0750  
                   l1092 05AC                     l1084 07E8                     l1076 07BB  
                   l1068 0786                     l1094 05AF                     l1086 07F1  
                   l1078 07BC                     l1096 05B6                     l1088 07F2  
                   l1098 05B7                     _Init 05A8                     _main 061B  
                   btemp 007E                     start 0000                    ?_Init 0070  
                  ?_main 0070          __end_of___awdiv 072A          __end_of___awmod 06C3  
        ___awdiv@divisor 0070          ___awdiv@counter 0075                    _PORTB 0006  
                  _PORTD 0008                    _TRISA 0085                    _TRISB 0086  
                  _TRISD 0088                    status 0003                    wtemp0 007E  
        __initialization 07FC             __end_of_Init 05B9      displayNumber@alafim 0024  
           __end_of_main 0668      displayNumber@asarot 0028      displayNumber@number 0022  
                 ??_Init 0070                   ??_main 002C          ??_displayNumber 007E  
                 _ADCON0 001F                   _ADRESH 001E                   _ADRESL 009E  
       ___awdiv@dividend 0072          delay_ms@delayMs 0070         __end_of_delay_ms 05DA  
              ??___awdiv 0074                ??___awmod 007D         ___awdiv@quotient 0077  
        ___awmod@divisor 0079          ___awmod@counter 0020  __end_of__initialization 07FC  
         __pcstackCOMMON 0070               __pmaintext 061B                ?_delay_ms 0070  
         display7s@digit 0072        main@low_important 002E        __end_of_display7s 061B  
                ___awdiv 06C3                  ___awmod 0668                  __ptext1 072A  
                __ptext2 05DA                  __ptext3 05B9                  __ptext4 0668  
                __ptext5 06C3                  __ptext6 05A8         ___awmod@dividend 007B  
             ??_delay_ms 0072                  main@res 0036     end_of_initialization 07FC  
              _PORTBbits 0006    __end_of_displayNumber 07FC               main@adresh 0034  
             main@adresl 0032               main@masker 0030        displayNumber@meot 0026  
      displayNumber@unit 002A      start_initialization 07FC                ___latbits 0002  
          __pcstackBANK0 0020                 ?___awdiv 0070                 ?___awmod 0079  
              _display7s 05DA                delay_ms@i 0073                delay_ms@j 0075  
             ?_display7s 0070               _ADCON0bits 001F               _ADCON1bits 009F  
               _delay_ms 05B9              ??_display7s 0070            _displayNumber 072A  
